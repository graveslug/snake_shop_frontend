{"version":3,"sources":["components/NavBar/NavBar.js","components/SnakeShow/SnakeShow.js","components/SnakeList/SnakeList.js","components/SignUpForm/SignUpForm.js","components/LogInForm/LogInForm.js","components/LogOutForm/LogOut.js","components/SnakeSubmit/SnakeSubmit.js","components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","navBarItems","key","className","href","isLoggedIn","push","SnakeShow","SnakeList","useState","snakes","setSnakes","useEffect","a","fetch","response","json","data","console","log","map","snake","i","src","alt","SignUpForm","htmlFor","type","name","onChange","handleInput","value","onClick","handleSignUp","LogInForm","class","handleLogIn","LogOut","handleLogOut","SnakeSubmit","history","useHistory","image","species","venomous","morph","sex","age","prooven","origin","quote","description","snakeState","setSnakeState","handleSnakeInput","event","target","handleSnakeSubmit","preventDefault","axios","post","About","App","email","password","state","setState","setIsLoggedIn","localStorage","token","clear","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.977d59d5.chunk.js","sourcesContent":["//NOT COMPLETE, just a general basis, more to be added when final design is approved by all group members\n\nimport React from 'react';\nimport \"./NavBar.css\"\n\nfunction NavBar(props) {\n    let navBarItems = [\n        <li key={1}>\n            <a className=\"menu\" href=\"/about\">About</a> \n        </li>\n    ];\n    if (props.isLoggedIn) {\n        navBarItems.push(\n            <>\n            <a>|</a>\n            <li key={2}>\n                <a className=\"menu\" href=\"/logout\">Log Out</a>\n            </li>\n            </>\n        );\n    } else {\n        navBarItems.push(\n            <>\n            <a>|</a>\n            <li key={3}>\n                <a className=\"menu\" href=\"/signup\">Register</a>\n            </li>\n            </>\n        );\n\n        navBarItems.push(\n            <>\n            <a>|</a>\n            <li key={4}>\n                <a className=\"menu\" href=\"/login\">Sign In</a>\n            </li>\n            </>\n        );\n    }\n    return (\n        <>\n        <nav>\n            <ul className=\"NavBar\"> {navBarItems} \n            </ul>\n        </nav>\n\n{/* Background work below */}\n        {/* <ul class=\"cb-slideshow\">\n\t<li>\n\t\t<span>Image 01</span>\n\t\t<div>\n\t\t\t<h3>Species info here??</h3>\n\t\t</div>\n\t</li>\n\t<li></li>\n\t<li></li>\n</ul> */}\n\n        </>\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './SnakeShow.css';\n\nfunction SnakeShow(props) {\n    // const { image, species, venomous, morph, sex, age, proven, origin, quote, description } = props.snake;\n    return (\n        // <div className=\"snake-preview\">\n        //     {props.isLoggedIn ? \n        //     <div>\n        //     <img src={image} className=\"snakeImage\"/>\n        //     <h3>Species{species}</h3>\n        //     <h5>Venomous: {venomous}</h5>\n        //     <h5>Morph: {morph}</h5>\n        //     <h5>Sex: {sex}</h5>\n        //     <h5>Age: {age}</h5>\n        //     <h5>Proven: {proven}</h5>\n        //     <h5>Origin: {origin}</h5>\n        //     <h5>{quote}</h5>\n        //     <p>Description: {description}</p>\n        //     </div>\n        <h1>Hi this is the show page</h1>\n    );\n}\n\nexport default SnakeShow;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport \"./SnakeList.css\"\nimport SnakeShow from \"../SnakeShow/SnakeShow\";\n\nconst SnakeList = (props) => {\n    const [snakes, setSnakes] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await fetch('https://hissery-backend.herokuapp.com/snakes');\n                const data = await response.json();\n                setSnakes([...data]);\n            } catch (e) {\n                console.log(e)\n            }\n        })();\n    }, []);\n\n    const showSnake = snakes.map((snake, i) => {\n        return (\n            <div key={i}>\n                <SnakeShow snake={snake} isLoggedIn={props.isLoggedIn} />\n            </div>\n        );\n    });\n    return (\n        <div>\n            <a href=\"/snakesubmit\" className=\"myButton\"><img className=\"addSnake\" src=\"https://i.imgur.com/jFlads4.png\"/></a>\n            <div className=\"grid\">\n                <div className=\"grid__item\">\n                    <div className=\"card\"><img className=\"card__img\" src=\"https://i.pinimg.com/originals/51/68/be/5168be6d6eeb3db280b2c1d9fc85d9eb.jpg\" />\n                        <div className=\"card__content\">\n                            <h1 className=\"card__header\">Male Sunbeam Snake</h1>\n                            <p className=\"card__text\">Proven, 4 year old, CB male Sunbeam Snake. Tolerates handling and feeds like a champ. Would do great in a breeding program</p><a href=\"/snakelist/show\"><button className=\"card__btn\">More Information<span>&rarr;</span></button></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"grid__item\">\n                    <div className=\"card\"><img className=\"card__img\" src=\"https://i.pinimg.com/originals/1a/57/88/1a57889947889a50f7652a8982bec5cc.jpg\" alt=\"Desert\" />\n                        <div className=\"card__content\">\n                            <h1 className=\"card__header\">Pair of California Garter Snakes</h1>\n                            <p className=\"card__text\">Proven pair of California Red-Sided Garter Snakes. Great indivudals, have given me several clutches perfect clutches. Female is a bit snappy but male is very personable.</p><button className=\"card__btn\">More Information<span>&rarr;</span></button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"grid__item\">\n                    <div className=\"card\"><img className=\"card__img\" src=\"https://i.pinimg.com/originals/c0/6c/98/c06c988fab6079da2b1fbaf8401bd6c5.jpg\"  />\n                        <div className=\"card__content\">\n                            <h1 className=\"card__header\">Eastern Female Indigo</h1>\n                            <p className=\"card__text\">Amazing CB female, two years old, see her being a great breeder. She's the resident trashcan and has that classic indigo attitude.</p><button className=\"card__btn\">More Information<span>&rarr;</span></button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"grid__item\">\n                    <div className=\"card\"><img className=\"card__img\" src=\"https://i.pinimg.com/originals/51/68/be/5168be6d6eeb3db280b2c1d9fc85d9eb.jpg\" />\n                        <div className=\"card__content\">\n                            <h1 className=\"card__header\">Male Sunbeam Snake</h1>\n                            <p className=\"card__text\">Proven, 4 year old, CB male Sunbeam Snake. Tolerates handling and feeds like a champ. Would do great in a breeding program</p><button className=\"card__btn\">More Information<span>&rarr;</span></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SnakeList;\n","import React from 'react';\n\nimport \"./SignUpForm.css\";\n\nfunction SignUpForm(props) {\n    return (\n        <div>\n            <br />\n            <br />\n            <div className=\"signUp\">\n                <h2 className=\"title\">Sign Up</h2>\n                <form>\n                    <div>\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" name=\"email\" onChange={props.handleInput} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"text\" name=\"password\" onChange={props.handleInput} />\n                    </div><br />\n                    <input value=\"Submit\" type=\"submit\" onClick={props.handleSignUp} />\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUpForm;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\n\n\nfunction LogInForm(props) {\n    return(\n        <div>\n            <br/>\n            <br/>\n        <div className=\"signUp\">\n        <h2 class=\"title\">Log In</h2>\n        <form>\n            <div>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"text\" name=\"email\" onChange={props.handleInput}/>\n            </div>\n            <div>\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"text\" name=\"password\" onChange={props.handleInput}/>\n            </div><br/>\n            <input value=\"Submit\" type=\"submit\" onClick={props.handleLogIn}/>\n        </form>\n        </div>\n        </div>\n    );\n}\n\nexport default LogInForm;\n","import React from 'react';\n\nfunction LogOut(props) {\n    return (\n        <div>\n            <h2>Log Out</h2>\n            <form>\n                <input value=\"Log Out\" type=\"submit\" onClick={props.handleLogOut} />\n            </form>\n        </div>\n    );\n}\n\nexport default LogOut;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\"\nimport axios from 'axios'\n\n\nfunction SnakeSubmit(props) {\n    const history = useHistory()\n    const [snakeState, setSnakeState] = useState({\n        image: \"\",\n        species: \"\",\n        venomous: \"\",\n        morph: \"\",\n        sex: \"\",\n        age: \"\",\n        prooven: \"\",\n        origin: \"\",\n        quote: \"\",\n        description: \"\"\n    });\n\n    const handleSnakeInput = (event) => {\n      setSnakeState({ ...snakeState, [event.target.name]: event.target.value });\n    };\n\n    const handleSnakeSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        const response = await axios.post(\"https://hissery-backend.herokuapp.com/snakes\", {\n          image: snakeState.image,\n          species: snakeState.species,\n          venomous: snakeState.venomous,\n          morph: snakeState.morph,\n          sex: snakeState.sex,\n          age: snakeState.age,\n          prooven: snakeState.prooven,\n          origin: snakeState.origin,\n          quote: snakeState.quote,\n          description: snakeState.description\n        });\n        console.log(response);\n        history.push(\"/\")\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    return(\n        <div>\n            <h2>Submit Snake</h2>\n            <form>\n                <div>\n                    <label htmlFor=\"image\">\n                        Image:\n                    </label>\n                    <input type=\"text\" name=\"image\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"species\">\n                        Species:\n                    </label>\n                    <input type=\"text\" name=\"species\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"venomous\">\n                        Venomous:\n                    </label>\n                    <input type=\"checkbox\" name=\"venomous\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"morph\">\n                        Morph:\n                    </label>\n                    <input type=\"text\" name=\"morph\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"sex\">\n                        Sex:\n                    </label>\n                    <input type=\"text\" name=\"sex\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"age\">\n                        Age:\n                    </label>\n                    <input type=\"text\" name=\"age\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"prooven\">\n                        Prooven:\n                    </label>\n                    <input type=\"checkbox\" name=\"prooven\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"origin\">\n                        Origin:\n                    </label>\n                    <input type=\"text\" name=\"origin\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"quote\">\n                        Quote:\n                    </label>\n                    <input type=\"text\" name=\"quote\" onChange={handleSnakeInput}/>\n                </div>\n                <div>\n                    <label htmlFor=\"description\">\n                        Description:\n                    </label>\n                    <input type=\"text\" name=\"description\" onChange={handleSnakeInput}/>\n                </div>\n                <input value=\"Submit\" type=\"submit\" onClick={handleSnakeSubmit}/>\n            </form>\n        </div>\n    );\n}\n\nexport default SnakeSubmit;\n","import React from 'react';\nimport \"./About.css\"\n\n\nfunction About (props){\n        return(\n            <div className=\"background\">\n                <div>\n                    <h2 className=\"title\">About Us</h2>\n                    <p>\n                        Welcome to Hissery. We are a group of classmates deciding to give you the best experience with look and reserving snakes out there. Philip Gray, Lillian Parker, and Isaac Dennis hope you enjoy this webpage and get a snake of your dreams.\n                    </p>\n                </div>\n                <div>\n                    <h2 className=\"title\">About Website</h2>\n                    <p>\n                        Here on Hissery, we provide high quality snakes where you can breed particular snakes to your liking. Through our reservation system you can reserve the snake(s). We have a wide variety of snakes to choose from. \n                    </p>\n                </div>\n                <h2 className=\"contactTitle\">Contact Us </h2>\n                <div className=\"allContacts\">\n                    <div className=\"section\">\n                    <h3  className=\"contact\">Philip Gray</h3>\n                    <a className=\"link\" href=\"mailto:philip.gray@email.com\">Email Me</a>\n                    </div><br/>\n                    <div className=\"section\">\n                    <h3  className=\"contact\">Isaac Dennis</h3>\n                    <a className=\"link\" href=\"mailto:isaac.dennis@email.com\">Email Me</a>\n                    </div><br/>\n                    <div className=\"section\">\n                    <h3  className=\"contact\">Lillian Parker</h3>\n                    <a className=\"link\" href=\"mailto:lillian.parker@email.com\">Email Me</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\nexport default About","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport NavBar from './components/NavBar/NavBar.js';\nimport SnakeList from './components/SnakeList/SnakeList.js';\nimport SnakeShow from './components/SnakeShow/SnakeShow.js';\nimport SignUpForm from \"./components/SignUpForm/SignUpForm.js\";\nimport LogInForm from \"./components/LogInForm/LogInForm.js\";\nimport LogOutForm from \"./components/LogOutForm/LogOut.js\";\nimport SnakeSubmit from \"./components/SnakeSubmit/SnakeSubmit\"\nimport \"./App.css\";\nimport About from './components/About/About.js';\n\n\nconst App = () => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    isLoggedIn: false,\n  });\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.token) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, [isLoggedIn]);\n\n  const handleLogOut = () => {\n    setState({\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n    });\n    localStorage.clear();\n  };\n\n  const handleInput = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"https://hissery-backend.herokuapp.com/users/signup\", {\n        email: state.email,\n        password: state.password,\n      });\n      console.log(response);\n      localStorage.token = await response.data.token;\n      setIsLoggedIn(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleLogIn = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"https://hissery-backend.herokuapp.com/users/login\", {\n        email: state.email,\n        password: state.password,\n      });\n      localStorage.token = response.data.token;\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <NavBar isLoggedIn={isLoggedIn} />\n      <div className=\"body\">\n        <Switch>\n          <Route\n            path=\"/signup\"\n            render={(props) => {\n              return (\n                <SignUpForm\n                  isLoggedIn={isLoggedIn}\n                  handleInput={handleInput}\n                  handleSignUp={handleSignUp}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/logout\"\n            render={(props) => {\n              return (\n                <LogOutForm isLoggedIn={isLoggedIn} handleLogOut={handleLogOut} />\n              );\n            }}\n          />\n          <Route\n            path=\"/login\"\n            render={(props) => {\n              return (\n                <LogInForm\n                  isLoggedIn={isLoggedIn}\n                  handleInput={handleInput}\n                  handleLogIn={handleLogIn}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/snakesubmit\"\n            render={(props) => {\n              return (\n                 <SnakeSubmit\n                 />\n                )\n              }}\n            />\n          <Route\n            path=\"/about\"\n            render={(props)=>{\n              return (\n                <About\n               />\n              )\n            }}\n          />\n          <Route\n            path=\"/snakelist/show\"\n            render={() => {\n              return (<SnakeShow\n              />\n             )\n            }}\n          />\n          <Route\n            path=\"/\"\n            render={() => {\n              return (\n                <SnakeList isLoggedIn={isLoggedIn}\n               />\n              )\n            }}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}